# {{ ansible_managed }}

# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here or in a telegraf.d/*.conf file to be activated.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"
{% if telegraf_tags is defined and telegraf_tags != None %}
{% for key, value in telegraf_tags.items()|list %}
   {{ key }} = "{{ value }}"
{% endfor %}
{% endif %}


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "{{ telegraf_agent_interval }}"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = {{ telegraf_round_interval }}

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = {{ telegraf_metric_batch_size }}

  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  ## This buffer only fills when writes fail to output plugin(s).
  metric_buffer_limit = {{ telegraf_metric_buffer_limit }}

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "{{ telegraf_collection_jitter }}"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "{{ telegraf_flush_interval }}"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "{{ telegraf_flush_jitter }}"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  precision = ""

  ## Logging configuration:
  ## Run telegraf with debug log messages.
  debug = {{ telegraf_debug }}
  ## Run telegraf in quiet mode (error log messages only).
  quiet = {{ telegraf_quiet }}
  ## Specify the log file name. The empty string means to log to stderr.
  logfile = "{{ telegraf_logfile }}"

  ## Override default hostname, if empty use os.Hostname()
  hostname = "{{ telegraf_hostname }}"
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = {{ telegraf_omit_hostname }}


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

{% for plugin in telegraf_output_plugins %}
[[outputs.{{ plugin.name }}]]
{% if plugin.options is defined %}
{% for key, value in plugin.options.items()|list %}
  {{ key }} = {{ value|to_json }}
{% endfor %}
{% endif %}

{% endfor %}


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

{% for plugin in telegraf_input_plugins %}
[[inputs.{{ plugin.name }}]]
{% if plugin.options is defined %}
{% for key, value in plugin.options.items()|list %}
  {{ key }} = {{ value|to_json }}
{% endfor %}
{% endif %}
{% if plugin.tags is defined %}
  [inputs.{{ plugin.name }}.tags]
{% for key, value in plugin.tags.items()|list %}
    {{ key }} = {{ value|to_json }}
{% endfor %}
{% endif %}
{% if plugin.tagpass is defined %}
  [inputs.{{ plugin.name }}.tagpass]
{% for key, value in plugin.tagpass.items()|list %}
    {{ key }} = {{ value|to_json }}
{% endfor %}
{% endif %}
{% if plugin.tagdrop is defined %}
  [inputs.{{ plugin.name }}.tagdrop]
{% for key, value in plugin.tagdrop.items()|list %}
    {{ key }} = {{ value|to_json }}
{% endfor %}
{% endif %}
{% endfor %}